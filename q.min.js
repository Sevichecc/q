let call=(t,e)=>new Function(`with(this){${"return "+t}}`).bind(e)(),directives={html:(t,e,n,o)=>t.innerHTML=call(n,o),text:(t,e,n,o)=>t.innerText=call(n,o),if:(t,e,n,o)=>t.hidden=!call(n,o),on:(t,e,n,o)=>t["on"+e]=()=>call(n,o),model:(t,e,n,o)=>{t.value=o[n],t.oninput=()=>o[n]=t.value},bind:(t,e,n,o)=>{let i=call(n,o);if("style"===e){t.removeAttribute("style");for(let e in i)t.style[e]=i[e]}else"class"===e?t.setAttribute("class",[].concat(i).join(" ")):i?t.setAttribute(e,i):t.removeAttribute(e)},each:(t,e,n,o)=>{let i=call(n,o);t.$each||(t.$each=t.children[0]),t.innerText="";for(let e of i){let n=document.importNode(t.$each),i={$parent:o,$it:e};n.$q=i,Q(n,i),t.appendChild(n)}}};let $dep;let walk=(t,e)=>{for(let{name:n,value:o}of t.attributes)if(n.startsWith("q-")){let[i,l]=n.substring(2).split(":"),s=directives[i];$dep=()=>s(t,l,o,e),$dep(),$dep=void 0}for(let n of t.children)n.$q||walk(n,e)},proxy=t=>{let e={};for(let n in t){e[n]=[];let o=t[n];Object.defineProperty(t,n,{get:()=>($dep&&e[n].push($dep),o),set(t){if(o=t,!n.startsWith("$"))for(let o of e[n])o(t)}})}return t},Q=(t,e)=>walk(t,proxy(e));
